apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: http
  labels:
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
spec:
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      annotations:
        checksum/config-cfssl-ca-signing: {{ include "cfssl/templates/k8s-cfssl-ca-signing-configmap.yaml" . | sha256sum }}
        checksum/config-cfssl-bootstrap: {{ include "cfssl/templates/k8s-cfssl-bootstrap-configmap.yaml" . | sha256sum }}
        checksum/config-nginx-site: {{ include "cfssl/templates/k8s-nginx-site-configmap.yaml" . | sha256sum }}
        checksum/secret-cfssl-dsn: {{ include "cfssl/templates/k8s-cfssl-db-dsn-secret.yaml" . | sha256sum }}
        alert-chat-channels: {{ .Values.alerting.chat_channels | quote }}
        alert-paging-profiles: {{ .Values.alerting.paging_profiles | quote }}
        pod.alpha.kubernetes.io/init-containers: '[
            {
                "name": "sign-initial-certs",
                "image": "{{ .Values.containers.cfssl.image.repository }}:{{ .Values.containers.cfssl.image.tag }}",
                "imagePullPolicy": "{{ .Values.containers.cfssl.image.pullPolicy }}",
                "command": ["/etc/bootstrap/init.sh"],
                "workingDir": "/initial-certificate-store",
                "volumeMounts": [
                  {
                    "name": "pki",
                    "mountPath": "/etc/cfssl-bootstrap"
                  },
                  {
                    "name": "bootstrap-init",
                    "mountPath": "/etc/bootstrap"
                  },
                  {
                    "name": "initial-certificates",
                    "mountPath": "/initial-certificate-store"
                  }
                ]
            }
        ]'
      labels:
        chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
        app: {{ template "fullname" . }}
        service: http
    spec:
      containers:
      - name: cfssl
        image: "{{ .Values.containers.cfssl.image.repository }}:{{ .Values.containers.cfssl.image.tag }}"
        imagePullPolicy: {{ .Values.containers.cfssl.image.pullPolicy }}
        command: [ "sleep" ]
        args:
        - "999999"
        ports:
        - containerPort: {{ .Values.services.http.internalPort }}
        #livenessProbe:
        #  httpGet:
        #    path: /healthz
        #    port: {{ .Values.services.http.internalPort }}
        #  initialDelaySeconds: 1
        #  timeoutSeconds: 1
        #readinessProbe:
        #  httpGet:
        #    path: /healthz
        #    port: {{ .Values.services.http.internalPort }}
        #  initialDelaySeconds: 1
        #  timeoutSeconds: 1
        volumeMounts:
        - name: dbconfig
          mountPath: /secrets
        - name: pki
          mountPath: /configs
        - name: initial-certificates
          mountPath: /etc/cfssl
        resources:
{{ toYaml .Values.resources.cfssl | indent 12 }}
      - name: nginx
        image: "{{ .Values.containers.nginx.image.repository }}:{{ .Values.containers.nginx.image.tag }}"
        imagePullPolicy: {{ .Values.containers.nginx.image.pullPolicy }}
        # livenessProbe:
        #   httpGet:
        #     path: /ping
        #     port: 443
        #     scheme: HTTPS
        ports:
        - containerPort: 443
          name: https
          protocol: TCP
        - containerPort: 9145
          name: metrics
          protocol: TCP
        resources:
{{ toYaml .Values.resources.nginx | indent 12 }}
        volumeMounts:
        - mountPath: /etc/nginx/sites-enabled
          name: nginx-config
          readOnly: true
        - mountPath: /etc/nginx/ssl
          name: initial-certificates
          readOnly: true
      volumes:
        - name: dbconfig
          secret:
            secretName: cfssl-db-dsn
            items:
            - key: db-config
              path: db.config 
        - name: bootstrap-init
          configMap:
            name: cfssl-bootstrap
            defaultMode: 0755
            items:
            - key: init.sh
              path: init.sh
        - name: pki
          configMap:
            name: ca-signing
            items:
            - key: root-ca.json
              path: root-ca.json
            - key: intermediate-ca.json
              path: intermediate-ca.json
            - key: signing-profiles.json
              path: signing-profiles.json
            - key: server_csr.json
              path: server_csr.json
        - name: initial-certificates
          persistentVolumeClaim:
            claimName: initial-cert-store
        - name: nginx-config
          configMap:
            name: nginx-site
            items:
            - key: nginx-site
              path: default
