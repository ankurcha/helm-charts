apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}
  labels:
    app: cfssl
    service: http
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: cfssl
      service: http
  template:
    metadata:
      annotations:
        checksum/ca-bootstrap: {{ include "cfssl/templates/k8s-configmap-ca-bootstrap.yaml" . | sha256sum }}
        checksum/ca-signing-profiles: {{ include "cfssl/templates/k8s-configmap-ca-signing-profiles.yaml" . | sha256sum }}
        alert-chat-channels: {{ .Values.alerting.chat_channels | quote }}
        alert-paging-profiles: {{ .Values.alerting.paging_profiles | quote }}
        pod.alpha.kubernetes.io/init-containers: '[
          {
            "name": "init-setup",
            "image": "{{ .Values.containers.cfssl.image.repository }}:{{ .Values.containers.cfssl.image.tag }}",
            "imagePullPolicy": "{{ .Values.containers.cfssl.image.pullPolicy }}",
            "env": [
              {
                "name": "DATABASE_USERNAME",
                "valueFrom": {
                  "secretKeyRef": {
                    "name": "{{ .Values.secretsRef }}",
                    "key": "secret-postgresql-postgres-user"
                  }
                }
              },
              {
                "name": "DATABASE_PASSWORD",
                "valueFrom": {
                  "secretKeyRef": {
                    "name": "{{ .Values.secretsRef }}",
                    "key": "secret-postgresql-postgres-password"
                  }
                }
              }
            ],
            "command": ["/bin/sh", "-c", "/init/init.sh"],
            "workingDir": "/initial-certificate-store",
            "volumeMounts": [
              {
                "name": "init-setup-script",
                "mountPath": "/init"
              },
              {
                "name": "initial-certificates",
                "mountPath": "/initial-certificate-store"
              },
              {
                "name": "config-pki-parameters",
                "mountPath": "/configs"
              }
            ]
          }
        ]'
      labels:
        app: cfssl
        service: http
    spec:
      containers:
      - name: cfssl
        image: "{{ .Values.containers.cfssl.image.repository }}:{{ .Values.containers.cfssl.image.tag }}"
        imagePullPolicy: {{ .Values.containers.cfssl.image.pullPolicy }}
        command: [ "cfssl" ]
        args:
          - -loglevel=0 # (0 = DEBUG, 5 = FATAL) (default 1)
          - serve
          - -address=0.0.0.0
          - -port=443
          - -tls-cert=/etc/cfssl/server-certificate.pem
          - -tls-key=/etc/cfssl/server-key.pem
          - -config=/configs/signing-profiles.json
          - -db-config=/etc/cfssl/db.config
          - -ca=/etc/cfssl/root_ca.pem
          - -ca-key=/etc/cfssl/root_ca-key.pem
          - -ca-bundle=/etc/cfssl/ca-bundle.crt
          - -int-bundle=/etc/cfssl/int-bundle.crt
          - -responder=/etc/cfssl/server.pem
          - -responder-key=/etc/cfssl/server-key.pem
        ports:
        - containerPort: {{ .Values.services.http.internalPort }}
        #livenessProbe:
        #  httpGet:
        #    path: /healthz
        #    port: {{ .Values.services.http.internalPort }}
        #  initialDelaySeconds: 1
        #  timeoutSeconds: 1
        #readinessProbe:
        #  httpGet:
        #    path: /healthz
        #    port: {{ .Values.services.http.internalPort }}
        #  initialDelaySeconds: 1
        #  timeoutSeconds: 1
        volumeMounts:
        - name: config-pki-parameters
          mountPath: /configs
        - name: initial-certificates
          mountPath: /etc/cfssl
        resources:
{{ toYaml .Values.resources.cfssl | indent 12 }}
      volumes:
        - name: init-setup-script
          configMap:
            name: ca-bootstrap
            defaultMode: 0755
            items:
            - key: init.sh
              path: init.sh
        - name: config-pki-parameters
          configMap:
            name: ca-signing
            items:
            - key: root-ca.json
              path: root-ca.json
            - key: intermediate-ca.json
              path: intermediate-ca.json
            - key: signing-profiles.json
              path: signing-profiles.json
        - name: initial-certificates
          persistentVolumeClaim:
            claimName: initial-cert-store
